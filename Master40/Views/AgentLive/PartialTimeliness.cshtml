@{ 
}
<style>
    .chartLayerTimeliness > canvas {
        width: 100px;
        height: 200px;
    }
    .chartContainerTimeliness {
        position: relative;
        width: 200px;
        height: 220px;
        margin-left: 20px;
        margin-right: 20px;
    }
</style>
<div style="float:left;">
    <div class="chartContainerTimeliness">
        <div class="chartLayerTimeliness" >

            <!--div id="js-legend" class="chart-legend"><div-->

            <canvas id="TimelinessElement" style="height: 200px"></canvas>
        </div>
        <div class="text-center">
            <b>
                <span id="valueTimeliness">
                    In time: 95 %
                </span>
            </b>
        </div>
    </div>
</div>

<script>
    var TimelinessElement = document.getElementById("TimelinessElement");
    var TimelinessChart = new Chart(TimelinessElement, {
            "type": "bar"
            , "data": {
                "datasets": [
                    {
                        "type": "bar"
                        ,"label": "to late"
                        , "backgroundColor": ["rgba(214, 233, 198, 0.6)", "rgba(227, 76, 87, 0.6)"]
                        , "borderColor": ["rgba(21, 87, 36, 0.9)", "rgba(227, 76, 87, 0.9)"]
                        , "borderWidth": 1
                        , "data": [95.0, 5.0]
                    }], "labels": ["in time", "to late"]
            }, "options": {
                "responsive": true, "maintainAspectRatio": false, "legend": { "display": false }
                , "scales": {
                    "yAxes": [{
                        "type": "linear", "id": "first-x-axis"
                        , "scaleLabel": { "display": true, "labelString": "Timeliness", "fontSize": 12 }
                        , "ticks": { "max": 100.0, "min": 0, "stepSize": 20, "display": true }
                        , "display": true, "stacked": false
                    }], "xAxes": [{ "display": true, "stacked": false }]
                }
            }
        }
    );;
    processingProxy.on("Timeliness", function (msg) {
        // console.log("Timeliness :" + msg);
        TimelinessChart.data.datasets[0].data = [msg, 100 - msg];
        TimelinessChart.update();
        var val = Math.round(msg*100)/100;
        $("#valueTimeliness").replaceWith("<span id='valueTimeliness'>In time: " + val + " %</span>");
    });
</script>