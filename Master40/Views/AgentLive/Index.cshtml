@model IEnumerable<Master40.DB.DataModel.M_Machine>

@{
    ViewBag.Title = "Agent Basic";

    Layout = "_Layout";
}

<style>
    .chartLayer.offline {
        color: #a94442;
        background-color: rgba(169, 68, 68, .2);
        border-radius: 4px;
        border: solid 1px #ebccd1;
        -webkit-box-shadow: 0 1px 1px rgba(169, 68, 68, .8);
        box-shadow: 0 1px 1px rgba(0, 0, 0, .05);
    }
    .chartLayer.online {
        border-radius: 4px;
        border: solid 1px rgba(125, 180, 86, 0.4);
        background-color: rgba(125, 180, 86, 0.05);
        -webkit-box-shadow: 0 1px 1px rgba(0, 0, 0, .05);
        box-shadow: 0 1px 1px rgba(0, 0, 0, .05);
    }

    .chartLayer, textLayer {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
    }

    .textLayer {
        z-index: -10;
        color: #666;
        display: flex;
        justify-content: center; /* align horizontal */
        align-items: center; /* align vertical */
    }
    
</style>
<script>
    const processingProxy = new signalR.HubConnectionBuilder()
        .withUrl("/MessageHub")
        .configureLogging(signalR.LogLevel.Information)
        .build();
</script>

<div class="container-fluid">
    <div class="row">
         <div class="col-md-9 col-sm-9">
            <div class="container-fluid">
                <div class="row">
                    
                    <h2>Agent System</h2>
                    

                    <div class="col-md-12 col-sm-12" style="margin-top: 0px">
                        <div class="row">
                            <div class="col-md-4 col-sm-4">
                                <div class="bs-callout bs-callout-info" id="callout-xref-input-group">
                                    <h4>Clock</h4>
                                    <p id="clock"><b>0</b></p>
                                </div>
                            </div>
                            <div class="col-md-4 col-sm-4">
                                <div class="bs-callout bs-callout-info" id="callout-xref-input-group">
                                    <h4>Orders</h4>
                                    <p id="orders"><b>0</b></p>
                                </div>
                            </div>
                            <div class="col-md-4 col-sm-4">
                                <div class="bs-callout bs-callout-warning" id="statusCallout">
                                    <h4>Status</h4>
                                    Ready
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-9 col-sm-9">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h4 class="panel-title">
                                    Machine Workload
                                </h4>
                            </div>
                            <div class="panel-body">
                                <div style="text-align: center">
                                    @{
                                        var containerSize = 150;
                                        var textPadding = 75;
                                        var fontSize = 20;
                                        if (Model.Count() > 6)
                                        {
                                            containerSize = 75;
                                            textPadding = 35;
                                            fontSize = 10;
                                        }
                                        @Html.Raw(@"<style>
                                                        .chartContainer {
                                                            position: relative;
                                                            background-color: transparent;
                                                            width: " + containerSize + @"px;
                                                            height: "+ containerSize + @"px;
                                                            margin-left: 5px;
                                                            margin-right: 5px;
                                                            margin-bottom: 5px;
                                                        }
                                                        .machineText {
                                                            font: " + fontSize + @"px Helvetica;
                                                        }
                                                        .textLayer {
                                                            padding-top: " + textPadding + @"px;
                                                            font: bold "+ fontSize + @"px Helvetica;
                                                        </style>")
                                    }
                                    @foreach (var section in Model.OrderBy(x => x.MachineGroup.Stage))
                                    {
                                        @await Html.PartialAsync("~/Views/AgentLive/PartialMachine.cshtml", section)
                                    }
                                </div>
                                <div>
                                    @await Html.PartialAsync("~/Views/AgentLive/PartialTotalWorkLoad.cshtml")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 col-sm-3">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h4 class="panel-title">
                                    Timeliness
                                </h4>
                            </div>
                            <div class="panel-body">
                                @await Html.PartialAsync("~/Views/AgentLive/PartialTimeliness.cshtml")
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-9">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h4 class="panel-title">
                                    Work in Progress
                                </h4>
                            </div>
                            <div style="text-align: center"  class="panel-body">
                                @await Html.PartialAsync("~/Views/AgentLive/PartialContract.cshtml")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h4 class="panel-title">
                                    Throughput Times
                                </h4>
                            </div>
                            <div style="text-align: center" class="panel-body">
                                @await Html.PartialAsync("~/Views/AgentLive/PartialThroughput.cshtml")
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 col-sm-12">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h4 class="panel-title">
                                    Storage Value in Euro
                                </h4>
                            </div>
                            <div style="text-align: center" class="panel-body">
                                @await Html.PartialAsync("~/Views/AgentLive/PartialStock.cshtml")
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-3 col-sm-3">
            <div class="container-fluid">
                <div class="row">
                        <h2>Control Panel </h2>
                        <p>
                            Container to Release the Force
                        </p>
                        <div class="panel-group" id="accordion">
                            <div class="panel panel-info">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#collapseOne">Processing Options</a>
                                    </h4>
                                </div>
                                <div id="collapseOne" class="panel-collapse collapse in">
                                    <div class="panel-body">
                                        <div class="panel-body">
                                            <div class="form-group row" style="">
                                                <label class="col-sm-6 col-form-label">Sim.Config</label>
                                                <select class="form-control col-md-6 pull-right" id="simNumber" style="max-width: 100px; margin-right: 15px;">
                                                    <option selected>Choose...</option>
                                                    <option value="1">1</option>
                                                    <option value="2">2</option>
                                                </select>
                                            </div>
                                            <div class="form-group row" style="">
                                                <label class="col-sm-8 col-form-label">Orders</label>
                                                <div class="col-sm-4">
                                                    <input id="orderAmount" class="form-control" value="550" />
                                                </div>
                                            </div>
                                            <div class="row form-group" style="">
                                                <label class="col-sm-8 col-form-label">Inter arrival rate</label>
                                                <div class="col-sm-4">
                                                    <input id="interArivalRate" class="form-control" value="0.025" />
                                                </div>
                                            </div>
                                            <div class="row form-group" style="">
                                                <label class="col-sm-8 col-form-label">Estimatet throughput time</label>
                                                <div class="col-sm-4">
                                                    <input id="estimatedThroughputTime" class="form-control" value="600" />
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="pull-right">
                                                    <button class="btn btn-outline-secondary ladda-button" id="simulationStart-btn" type="button" onclick="startAgents()">Run!</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="panel panel-danger">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#collapseTwo">For Debugging Only</a>
                                    </h4>
                                </div>
                                <div id="collapseTwo" class="panel-collapse collapse">
                                    <div class="panel-body">
                                        <div class="input-group">
                                            <div class="input-group-append">
                                                <button class="btn btn-outline-secondary" type="button" onclick="alert('Not Implemented yet')">Run!</button>
                                            </div>
                                        </div>
                                        
                                    </div>
                                </div>
                            </div>
                    </div>
                    <h2>Messages</h2>
                    <div class="panel-group">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h4 class="panel-title">
                                    <a data-toggle="collapse" href="#collapse2" data-parent="#accordion">Messages</a>
                                </h4>
                            </div>
                            <div id="collapse2" class="panel-collapse collapse in">
                                <div id="" class="MessageDisplay" style="max-height: 600px;overflow: auto;"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>

    processingProxy.on("clientListener", function (msg) {
        if (msg == "ProcessingComplete") {
            $(".MessageDisplay").prepend('<div class="alert alert-info">Completed Processing</div>');
            $(".MessageDisplayRunning").prepend('<div class="alert alert-success">Completed Processing</div>');
            var l = Ladda.create(document.querySelector("#simulationStart-btn"));
            l.toggle();

            $("#statusCallout").replaceWith("<div class='bs-callout bs-callout-warning' id='statusCallout'>"
                + "<h4> Status</h4>"
                + "Finished"
                + "</div>");

        } else if (msg == "SignalReady") {
            $('#ajax-busy').hide();
        } else if (msg == "ProcessingUpdate" || msg == "MrpProcessingComplete") {
            // do nothing
        } else {
            $(".MessageDisplay").prepend(msg);
            //$(".MessageDisplayRunning").prepend(msg);
        }
    });

    processingProxy.on("clockListener", function (msg) {
        $("#clock").replaceWith("<p id='clock'><b>" + msg + "</b></p>")
    });

    processingProxy.on("orderListener", function (msg) {
        $("#orders").replaceWith("<p id='orders'><b>" + msg + "</b></p>")
    });

    // Processing Hub is loaded
    processingProxy.start()
        .then(function () { processingProxy.invoke('SystemReady') })
        .catch(err => console.error(err.toString()));


    // Start Agents
    function startAgents() {
        $(".MessageDisplayRunning").html("");
        var l = Ladda.create(document.querySelector("#simulationStart-btn"));
        l.start();
        l.toggle();
        var simNr = $("#SimNumber")
        var simNr = document.querySelector("#simNumber").value;
        var orderAmount = document.querySelector("#orderAmount").value;
        var arivalRate = document.querySelector("#interArivalRate").value;
        var estimatedThroughputTime = document.querySelector("#estimatedThroughputTime").value;

        $("#statusCallout").replaceWith("<div class='bs-callout bs-callout-success' id='statusCallout'>"
                                        + "<h4> Status</h4>"
                                        + "Running"
                                        + "</div>");
        

        $.get("AgentLive/RunAsync/" + simNr + "/orderAmount/" + orderAmount + "/arivalRate/" + arivalRate + "/estimatedThroughputTime/" + estimatedThroughputTime );
    }

    function breakDown(machine) {
        $.get("AgentLive/MachineBreakdown/" + machine);
    }

    $(document).ready(function () {
        // Block Interactions
        $(".MessageDisplayRunning").prepend('<div class="alert alert-success">Preparing System</div>');
        //$('#ajax-busy').show();
        // make make use of full size and hide overflow
        $('#main').removeClass("container").addClass("container-fluid").css("overflow-x", "hidden");
    });
</script>