@model IEnumerable<Master40.DB.DataModel.M_Resource>

@{
    ViewBag.Title = "Agent Basic";

    Layout = "_Layout";
}

<style>
    .chartLayer.offline {
        color: #a94442;
        background-color: rgba(169, 68, 68, .2);
        border-radius: 4px;
        border: solid 1px #ebccd1;
        -webkit-box-shadow: 0 1px 1px rgba(169, 68, 68, .8);
        box-shadow: 0 1px 1px rgba(0, 0, 0, .05);
    }

    .chartLayer.online {
        border-radius: 4px;
        border: solid 1px rgba(125, 180, 86, 0.4);
        background-color: rgba(125, 180, 86, 0.05);
        -webkit-box-shadow: 0 1px 1px rgba(0, 0, 0, .05);
        box-shadow: 0 1px 1px rgba(0, 0, 0, .05);
    }

    .chartLayer, textLayer {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
    }

    .textLayer {
        z-index: -10;
        color: #666;
        display: flex;
        justify-content: center; /* align horizontal */
        align-items: center; /* align vertical */
    }
</style>
<script>
    const processingProxy = new signalR.HubConnectionBuilder()
        .withUrl("/MessageHub")
        .configureLogging(signalR.LogLevel.Information)
        .build();
</script>
<div class="row">
    <div class="col-12">
        <h2>Agent System</h2>
    </div>

</div>


<div class="container-fluid">
    <div class="row">
        <div class="col-lg-9 col-md-9">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-lg-12 col-md-12" style="margin-top: 0px">
                        <div class="row">
                            <div class="col-lg-3 col-md-3">
                                <div class="bs-callout bs-callout-info" id="callout-xref-input-group">
                                    <h4>Clock</h4>
                                    <p id="clock">
                                        <b>0</b>
                                    </p>
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-3">
                                <div class="bs-callout bs-callout-info" id="callout-xref-input-group">
                                    <h4>Orders</h4>
                                    <p id="orders">
                                        <b>0</b>
                                    </p>
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-3">
                                <div class="bs-callout bs-callout-info" id="callout-xref-input-group">
                                    <h4>OEE</h4>
                                    <p id="oee">
                                        <b>0 %</b>
                                    </p>
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-3">
                                <div class="bs-callout bs-callout-warning" id="statusCallout">
                                    <h4>Status</h4>
                                    Ready
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-9">
                        <div class="card" style="margin-top: 10px;">
                            <div class="card-header">
                                <b>Work in Progress</b>
                            </div>
                            <div style="text-align: center" class="card-body">@await Html.PartialAsync(partialViewName: "~/Views/AgentLive/PartialContract.cshtml")</div>
                        </div>
                    </div>
                   
            <div class="col-lg-3 col-md-3">
                <div class="card"  style="margin-top: 10px;">
                    <div class="card-header">
                        <b>Timeliness</b>
                    </div>
                    <div class="card-body">@await Html.PartialAsync(partialViewName: "~/Views/AgentLive/PartialTimeliness.cshtml")</div>
                </div>
            </div>
        </div>
                <div class="row">
                    <div class="col-lg-9 col-md-9">
                        <div class="card"  style="margin-top: 10px;">
                            <div class="card-header">
                                <b>Machine Workload</b>
                            </div>
                            <div class="card-body">
                                <div style="text-align: center">
                                    @{ var containerSize = 150; var textPadding = 75; var fontSize = 15;
                                        if (Model.Count() > 6)
                                        {
                                            containerSize = 75; textPadding = 35; fontSize = 10;
                                        } @Html.Raw(value: @"
                            <style>
                                .chartContainer {
                                    position: relative;
                                    background-color: transparent;
                                    width:" + containerSize + @"px;
                                    height:" + containerSize + @"px;
                                    margin-left: 5px;
                                    margin-right: 5px;
                                    margin-bottom: 5px;
                                }
                                .machineText {
                                    font:" + fontSize + @"px Helvetica;
                                }
                                .textLayer {
                                    padding-top:" + textPadding + @"px;
                                    font: bold" + fontSize + @"px Helvetica;
                            </style>") } @foreach (var section in Model.OrderBy(keySelector: x => x.Id))
                                    {@await Html.PartialAsync(partialViewName: "~/Views/AgentLive/PartialMachine.cshtml",
                                model: section)}
                        </div>
                        <div>@await Html.PartialAsync(partialViewName: "~/Views/AgentLive/PartialTotalWorkLoad.cshtml")</div>
                    </div>
                </div>
                </div>
                <div class="col-lg-3">
                    <div class="card" style="margin-top: 10px;">
                        <div class="card-header">
                            <b>Throughput Times</b>
                        </div>
                        <div style="text-align: center" class="card-body">@await Html.PartialAsync(partialViewName: "~/Views/AgentLive/PartialThroughput.cshtml")</div>
                    </div>
                </div>
                </div>
        <div class="row">
            <div class="col-lg-12 col-md-12">
                <div class="card" style="margin-top: 10px;">
                    <div class="card-header">
                        <b>Storage Value in Euro </b>
                    </div>
                    <div style="text-align: center" class="card-body">@await Html.PartialAsync(partialViewName: "~/Views/AgentLive/PartialStock.cshtml")</div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="col-lg-3 col-md-3">
    <div class="container-fluid">
        <div class="row">
            <div class="card" style="margin-top: 20px">
                <div class="card-header">
                    Control Panel
                </div>
                <div class="card-body">
                    <div class=" ">
                        <div class="form-group row" style="">
                            <label class="col-md-8 col-form-label">Sim.Config</label>
                            <select class="form-control col-lg-4 pull-right" id="simulationType"
                                    style="max-width: 100px; margin-left: 15px;">
                                <option selected>Choose...</option>
                                <option value="1">None</option>
                                <option value="2">DefaultSetup</option>
                                <option value="3">DefaultSetupStack</option>
                                <option value="4">BucketScope</option>
                            </select>
                        </div>
                        <div class="form-group row" style="">
                            <label class="col-md-8 col-form-label">Orders</label>
                            <div class="col-md-4">
                                <input id="orderAmount" class="form-control" value="550">
                            </div>
                        </div>
                        <div class="row form-group" style="">
                            <label class="col-md-8 col-form-label">Inter arrival rate</label>
                            <div class="col-md-4">
                                <input id="interArrivalRate" class="form-control" value="0.02">
                            </div>
                        </div>
                        <div class="row form-group" style="">
                            <label class="col-md-8 col-form-label">Estimated throughput time</label>
                            <div class="col-md-4">
                                <input id="estimatedThroughputTime" class="form-control" value="600">
                            </div>
                        </div>
                        <div class="row">
                            <label class="col-md-8 col-form-label">Start simulation run</label>
                            <div class="col-md-4">
                                <button class="btn btn-outline-secondary ladda-button" id="simulationStart-btn"
                                        type="button" onclick="startAgents()">
                                    Run!
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            @await Html.PartialAsync(partialViewName: "~/Views/AgentLive/Summary.cshtml")
        </div>
    </div>
</div>
</div>
</div>
<script>

    processingProxy.on("clientListener", function (msg) {
        if (msg == "ProcessingComplete") {
            $(".MessageDisplay").prepend('<div class="alert alert-info">Completed Processing</div>');
            $(".MessageDisplayRunning").prepend('<div class="alert alert-success">Completed Processing</div>');
            var l = Ladda.create(document.querySelector("#simulationStart-btn"));
            l.toggle();

            $("#statusCallout").replaceWith("<div class='bs-callout bs-callout-warning' id='statusCallout'>"
                + "<h4> Status</h4>"
                + "Finished"
                + "</div>");

        } else if (msg == "SignalReady") {
            $('#ajax-busy').hide();
        } else if (msg == "ProcessingUpdate" || msg == "MrpProcessingComplete") {
            // do nothing
        } else {
            $(".MessageDisplay").prepend(msg);
            //$(".MessageDisplayRunning").prepend(msg);
        }
    });

    processingProxy.on("clockListener", function (msg) {
        $("#clock").replaceWith("<p id='clock'><b>" + msg + "</b></p>");
    });

    processingProxy.on("orderListener", function (msg) {
        $("#orders").replaceWith("<p id='orders'><b>" + msg + "</b></p>");
    });

    processingProxy.on("oeeListener", function (msg) {
        $("#oee").replaceWith("<p id='oee'><b>" + msg + " %</b></p>");
    });

    // Processing Hub is loaded
    processingProxy.start()
        .then(function () { processingProxy.invoke('SystemReady') })
        .catch(err => console.error(err.toString()));


    // Start Agents
    function startAgents() {
        $(".MessageDisplayRunning").html("");
        var l = Ladda.create(document.querySelector("#simulationStart-btn"));
        l.start();
        l.toggle();
        var simulationType = document.querySelector("#simulationType").value;
        var orderAmount = document.querySelector("#orderAmount").value;
        var arivalRate = document.querySelector("#interArrivalRate").value;
        var estimatedThroughputTime = document.querySelector("#estimatedThroughputTime").value;

        $("#statusCallout").replaceWith("<div class='bs-callout bs-callout-success' id='statusCallout'>"
            + "<h4> Status</h4>"
            + "Running"
            + "</div>");


        $.get("AgentLive/RunAsync/" + simulationType + "/orderAmount/" + orderAmount + "/arivalRate/" + arivalRate + "/estimatedThroughputTime/" + estimatedThroughputTime);
    }

    function breakDown(machine) {
        $.get("AgentLive/MachineBreakdown/" + machine);
    }

    $(document).ready(function () {
        // Block Interactions
        $(".MessageDisplayRunning").prepend('<div class="alert alert-success">Preparing System</div>');
        //$('#ajax-busy').show();
        // make make use of full size and hide overflow
        $('#main').removeClass("container").addClass("container-fluid").css("overflow-x", "hidden");
    });
</script>